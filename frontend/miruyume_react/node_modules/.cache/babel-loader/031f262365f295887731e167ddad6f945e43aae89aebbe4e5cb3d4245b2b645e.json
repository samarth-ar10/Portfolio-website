{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport StatusBar from './components/StatusBar';\nimport MenuBar from './components/MenuBar';\nimport ContentWindow from './components/ContentWindow';\nimport MessageBar from './components/MessageBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [projects, setProjects] = useState([]);\n  const menuBarRef = useRef();\n  const handleMenuToggle = () => {\n    setMenuOpen(prev => !prev);\n  };\n  useEffect(() => {\n    // Fetch presentation data from the backend (example API call)\n    fetch('http://localhost:5000/api/presentations').then(response => response.json()).then(data => {\n      setProjects(data);\n      updateMenuItems(data);\n    }).catch(error => {\n      console.error('Error fetching presentations:', error);\n    });\n  }, []);\n  const getFirstSlideNames = () => {\n    return projects.map(project => {\n      var _project$slides$;\n      return ((_project$slides$ = project.slides[0]) === null || _project$slides$ === void 0 ? void 0 : _project$slides$.slideName) || 'Untitled Slide';\n    });\n  };\n  const updateMenuItems = projects => {\n    if (menuBarRef.current) {\n      menuBarRef.current.clearMenuItems();\n      getFirstSlideNames().forEach(firstSlideName => {\n        menuBarRef.current.addMenuItem(null, firstSlideName, null);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n      isMenuOpen: isMenuOpen,\n      handleMenuToggle: handleMenuToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n      ref: menuBarRef,\n      isOpen: isMenuOpen,\n      toggleMenu: handleMenuToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentWindow, {\n      projects: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aRikwIbnImbPrywn0REMuCf1pT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","StatusBar","MenuBar","ContentWindow","MessageBar","jsxDEV","_jsxDEV","App","_s","isMenuOpen","setMenuOpen","projects","setProjects","menuBarRef","handleMenuToggle","prev","fetch","then","response","json","data","updateMenuItems","catch","error","console","getFirstSlideNames","map","project","_project$slides$","slides","slideName","current","clearMenuItems","forEach","firstSlideName","addMenuItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","isOpen","toggleMenu","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport StatusBar from './components/StatusBar';\nimport MenuBar from './components/MenuBar';\nimport ContentWindow from './components/ContentWindow';\nimport MessageBar from './components/MessageBar';\nimport './App.css';\n\nfunction App() {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [projects, setProjects] = useState([]);\n  const menuBarRef = useRef();\n\n  const handleMenuToggle = () => {\n    setMenuOpen((prev) => !prev);\n  };\n\n  useEffect(() => {\n    // Fetch presentation data from the backend (example API call)\n    fetch('http://localhost:5000/api/presentations')\n      .then((response) => response.json())\n      .then((data) => {\n        setProjects(data);\n        updateMenuItems(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching presentations:', error);\n      });\n  }, []);\n\n  const getFirstSlideNames = () => {\n    return projects.map(project => project.slides[0]?.slideName || 'Untitled Slide');\n  };\n\n  const updateMenuItems = (projects) => {\n    if (menuBarRef.current) {\n      menuBarRef.current.clearMenuItems();\n      getFirstSlideNames().forEach((firstSlideName) => {\n        menuBarRef.current.addMenuItem(null, firstSlideName, null);\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <StatusBar isMenuOpen={isMenuOpen} handleMenuToggle={handleMenuToggle} />\n      <MenuBar ref={menuBarRef} isOpen={isMenuOpen} toggleMenu={handleMenuToggle} />\n      <ContentWindow projects={projects} />\n      <MessageBar />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
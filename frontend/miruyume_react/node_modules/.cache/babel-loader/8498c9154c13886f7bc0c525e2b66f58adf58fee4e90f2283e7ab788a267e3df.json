{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\MenuBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './MenuBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MenuBar({\n  getFirstSlideNames\n}) {\n  _s();\n  const [slideNames, setSlideNames] = useState([]);\n  useEffect(() => {\n    // Function to update the slide names based on the current projects order\n    const updateSlideNames = () => {\n      const firstSlideNames = getFirstSlideNames();\n      setSlideNames(firstSlideNames);\n    };\n\n    // Initial update of slide names\n    updateSlideNames();\n\n    // Set an interval to regularly update the slide names (or you could use another method to trigger updates)\n    const intervalId = setInterval(updateSlideNames, 5000); // Update every 5 seconds\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, [getFirstSlideNames]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"menu-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: slideNames.map((slideName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"menu-item\",\n        children: slideName\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(MenuBar, \"eD/qV71HNXLwZ2FnUNXUK7J8ZJw=\");\n_c = MenuBar;\nexport default MenuBar;\nvar _c;\n$RefreshReg$(_c, \"MenuBar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MenuBar","getFirstSlideNames","_s","slideNames","setSlideNames","updateSlideNames","firstSlideNames","intervalId","setInterval","clearInterval","className","children","map","slideName","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/MenuBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './MenuBar.css';\r\n\r\nfunction MenuBar({ getFirstSlideNames }) {\r\n    const [slideNames, setSlideNames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Function to update the slide names based on the current projects order\r\n        const updateSlideNames = () => {\r\n            const firstSlideNames = getFirstSlideNames();\r\n            setSlideNames(firstSlideNames);\r\n        };\r\n\r\n        // Initial update of slide names\r\n        updateSlideNames();\r\n\r\n        // Set an interval to regularly update the slide names (or you could use another method to trigger updates)\r\n        const intervalId = setInterval(updateSlideNames, 5000); // Update every 5 seconds\r\n\r\n        return () => clearInterval(intervalId); // Cleanup interval on component unmount\r\n    }, [getFirstSlideNames]);\r\n\r\n    return (\r\n        <nav className=\"menu-bar\">\r\n            <ul>\r\n                {slideNames.map((slideName, index) => (\r\n                    <li key={index} className=\"menu-item\">\r\n                        {slideName}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default MenuBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,MAAMC,eAAe,GAAGL,kBAAkB,CAAC,CAAC;MAC5CG,aAAa,CAACE,eAAe,CAAC;IAClC,CAAC;;IAED;IACAD,gBAAgB,CAAC,CAAC;;IAElB;IACA,MAAME,UAAU,GAAGC,WAAW,CAACH,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;;IAExD,OAAO,MAAMI,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACN,kBAAkB,CAAC,CAAC;EAExB,oBACIF,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBZ,OAAA;MAAAY,QAAA,EACKR,UAAU,CAACS,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC7Bf,OAAA;QAAgBW,SAAS,EAAC,WAAW;QAAAC,QAAA,EAChCE;MAAS,GADLC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAChB,EAAA,CA9BQF,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAgChB,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\ContentWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContentWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentWindow() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(0);\n  useEffect(() => {\n    // Fetch presentation data from the Flask backend\n    fetch('http://localhost:5000/api/presentations').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched Data:', data); // Log the fetched data to debug JSON structure\n      // Transform the fetched data into the required format for projects\n      const fetchedProjects = Object.entries(data).map(([key, slides]) => {\n        var _slides$;\n        if (!Array.isArray(slides) || slides.length === 0) {\n          console.warn(`Invalid or empty slides for project: ${key}`);\n          return null;\n        }\n        return {\n          id: key,\n          title: ((_slides$ = slides[0]) === null || _slides$ === void 0 ? void 0 : _slides$['Presentation Name']) || 'Untitled Presentation',\n          description: `This presentation contains ${slides.length} slides.`,\n          slides: slides.map(slide => ({\n            slideId: slide['Slide ID'],\n            slideName: slide['Slide Name'],\n            slideType: slide['Slide Type'],\n            slideInformation: slide['Slide Information'],\n            slideDescription: slide['Slide Description']\n          }))\n        };\n      }).filter(project => project !== null);\n      setProjects(fetchedProjects);\n    }).catch(error => {\n      console.error('Error fetching presentations:', error);\n      alert('Error fetching presentations. Please check the console for more details.');\n    });\n  }, []);\n  const handleTileClick = project => {\n    // Set the selected project and reset the slide index\n    setCurrentProject(project);\n    setCurrentSlideIndex(0);\n  };\n  const handleNextSlide = () => {\n    if (currentProject && currentSlideIndex < currentProject.slides.length - 1) {\n      setCurrentSlideIndex(currentSlideIndex + 1);\n    }\n  };\n  const handlePreviousSlide = () => {\n    if (currentProject && currentSlideIndex > 0) {\n      setCurrentSlideIndex(currentSlideIndex - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ai-presentation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"ai-text\",\n        children: \"Welcome! Click on a project tile to learn more about it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"project-tiles\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleTileClick(project),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile\",\n          id: project.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), currentProject && currentProject.id === project.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePreviousSlide,\n            disabled: currentSlideIndex === 0,\n            children: \"Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentProject.slides[currentSlideIndex].slideName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentProject.slides[currentSlideIndex].slideDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Type: \", currentProject.slides[currentSlideIndex].slideType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Information: \", currentProject.slides[currentSlideIndex].slideInformation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextSlide,\n            disabled: currentSlideIndex === currentProject.slides.length - 1,\n            children: \"Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentWindow, \"s7pP4Hd6JgcHvxb+ZZr+xL/W+cw=\");\n_c = ContentWindow;\nexport default ContentWindow;\nvar _c;\n$RefreshReg$(_c, \"ContentWindow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContentWindow","_s","projects","setProjects","currentProject","setCurrentProject","currentSlideIndex","setCurrentSlideIndex","fetch","then","response","ok","Error","status","json","data","console","log","fetchedProjects","Object","entries","map","key","slides","_slides$","Array","isArray","length","warn","id","title","description","slide","slideId","slideName","slideType","slideInformation","slideDescription","filter","project","catch","error","alert","handleTileClick","handleNextSlide","handlePreviousSlide","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/ContentWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContentWindow.css';\r\n\r\nfunction ContentWindow() {\r\n    const [projects, setProjects] = useState([]);\r\n    const [currentProject, setCurrentProject] = useState(null);\r\n    const [currentSlideIndex, setCurrentSlideIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Fetch presentation data from the Flask backend\r\n        fetch('http://localhost:5000/api/presentations')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log('Fetched Data:', data); // Log the fetched data to debug JSON structure\r\n                // Transform the fetched data into the required format for projects\r\n                const fetchedProjects = Object.entries(data).map(([key, slides]) => {\r\n                    if (!Array.isArray(slides) || slides.length === 0) {\r\n                        console.warn(`Invalid or empty slides for project: ${key}`);\r\n                        return null;\r\n                    }\r\n                    return {\r\n                        id: key,\r\n                        title: slides[0]?.['Presentation Name'] || 'Untitled Presentation',\r\n                        description: `This presentation contains ${slides.length} slides.`,\r\n                        slides: slides.map(slide => ({\r\n                            slideId: slide['Slide ID'],\r\n                            slideName: slide['Slide Name'],\r\n                            slideType: slide['Slide Type'],\r\n                            slideInformation: slide['Slide Information'],\r\n                            slideDescription: slide['Slide Description'],\r\n                        }))\r\n                    };\r\n                }).filter(project => project !== null);\r\n                setProjects(fetchedProjects);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching presentations:', error);\r\n                alert('Error fetching presentations. Please check the console for more details.');\r\n            });\r\n    }, []);\r\n\r\n    const handleTileClick = (project) => {\r\n        // Set the selected project and reset the slide index\r\n        setCurrentProject(project);\r\n        setCurrentSlideIndex(0);\r\n    };\r\n\r\n    const handleNextSlide = () => {\r\n        if (currentProject && currentSlideIndex < currentProject.slides.length - 1) {\r\n            setCurrentSlideIndex(currentSlideIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousSlide = () => {\r\n        if (currentProject && currentSlideIndex > 0) {\r\n            setCurrentSlideIndex(currentSlideIndex - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"content-window\">\r\n            <section className=\"ai-presentation\">\r\n                <p id=\"ai-text\">Welcome! Click on a project tile to learn more about it.</p>\r\n            </section>\r\n            <section className=\"project-tiles\">\r\n                {projects.map((project) => (\r\n                    <div key={project.id} onClick={() => handleTileClick(project)}>\r\n                        <div className=\"tile\" id={project.id} key={project.id}>\r\n                            <h2>{project.title}</h2>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        {currentProject && currentProject.id === project.id && (\r\n                            <div className=\"slide-navigation\">\r\n                                <button onClick={handlePreviousSlide} disabled={currentSlideIndex === 0}>Left</button>\r\n                                <div className=\"slide-content\">\r\n                                    <h3>{currentProject.slides[currentSlideIndex].slideName}</h3>\r\n                                    <p>{currentProject.slides[currentSlideIndex].slideDescription}</p>\r\n                                    <p>Type: {currentProject.slides[currentSlideIndex].slideType}</p>\r\n                                    <p>Information: {currentProject.slides[currentSlideIndex].slideInformation}</p>\r\n                                </div>\r\n                                <button onClick={handleNextSlide} disabled={currentSlideIndex === currentProject.slides.length - 1}>Right</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ContentWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
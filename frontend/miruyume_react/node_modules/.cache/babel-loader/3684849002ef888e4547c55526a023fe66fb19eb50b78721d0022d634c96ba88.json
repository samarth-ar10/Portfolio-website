{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\StatusBar.js\";\n// StatusBar.js - Controls the status bar, including chat and menu button functionality\n\nimport React, { useState } from 'react';\nimport ChatBar from './ChatBar';\nimport './StatusBar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StatusBar({\n  appName,\n  handleMenuToggle\n}) {\n  const handleMenuButtonPress = () => {\n    const menuEvent = new CustomEvent('menuButtonPressed');\n    window.dispatchEvent(menuEvent);\n    // handleMenuToggle();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"status-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: handleMenuButtonPress,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-name\",\n        children: appName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = StatusBar;\nexport default StatusBar;\n\n// Example of how to use handleMenuToggle:\n// const [isMenuOpen, setMenuOpen] = useState(false);\n// const handleMenuToggle = () => setMenuOpen(prev => !prev);\n// Pass handleMenuToggle to <StatusBar handleMenuToggle={handleMenuToggle} />\nvar _c;\n$RefreshReg$(_c, \"StatusBar\");","map":{"version":3,"names":["React","useState","ChatBar","jsxDEV","_jsxDEV","Fragment","_Fragment","StatusBar","appName","handleMenuToggle","handleMenuButtonPress","menuEvent","CustomEvent","window","dispatchEvent","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/StatusBar.js"],"sourcesContent":["// StatusBar.js - Controls the status bar, including chat and menu button functionality\r\n\r\nimport React, { useState } from 'react';\r\nimport ChatBar from './ChatBar';\r\nimport './StatusBar.css';\r\n\r\nfunction StatusBar({ appName, handleMenuToggle }) {\r\n\r\n    const handleMenuButtonPress = () => {\r\n        const menuEvent = new CustomEvent('menuButtonPressed');\r\n        window.dispatchEvent(menuEvent);\r\n        // handleMenuToggle();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header className=\"status-bar\">\r\n                <button className=\"menu-button\" onClick={handleMenuButtonPress}>&#9776;</button>\r\n                <h1 className=\"app-name\">{appName}</h1>\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StatusBar;\r\n\r\n// Example of how to use handleMenuToggle:\r\n// const [isMenuOpen, setMenuOpen] = useState(false);\r\n// const handleMenuToggle = () => setMenuOpen(prev => !prev);\r\n// Pass handleMenuToggle to <StatusBar handleMenuToggle={handleMenuToggle} />"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,OAAO;EAAEC;AAAiB,CAAC,EAAE;EAE9C,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAChC,MAAMC,SAAS,GAAG,IAAIC,WAAW,CAAC,mBAAmB,CAAC;IACtDC,MAAM,CAACC,aAAa,CAACH,SAAS,CAAC;IAC/B;EACJ,CAAC;EAED,oBACIP,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACIX,OAAA;MAAQY,SAAS,EAAC,YAAY;MAAAD,QAAA,gBAC1BX,OAAA;QAAQY,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEP,qBAAsB;QAAAK,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChFjB,OAAA;QAAIY,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAEP;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC,gBACX,CAAC;AAEX;AAACC,EAAA,GAhBQf,SAAS;AAkBlB,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
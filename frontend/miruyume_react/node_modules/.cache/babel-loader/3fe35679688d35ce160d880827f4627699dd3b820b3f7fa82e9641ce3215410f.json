{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\AiTile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AiTile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AiTile() {\n  _s();\n  const [responseText, setResponseText] = useState('');\n  useEffect(() => {\n    // Fetch AI response from the server on component mount\n    const fetchAiResponse = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/ai_response');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setResponseText(data.response);\n      } catch (error) {\n        console.error('Error fetching AI response:', error);\n        setResponseText('Error: Unable to get a response from the server.');\n      }\n    };\n    fetchAiResponse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-tile\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(AiTile, \"j7eO7UlNIBFOzw14JIxI/mBqnXY=\");\n_c = AiTile;\nexport default AiTile;\nvar _c;\n$RefreshReg$(_c, \"AiTile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AiTile","_s","responseText","setResponseText","fetchAiResponse","response","fetch","ok","Error","status","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/AiTile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AiTile.css';\r\n\r\nfunction AiTile() {\r\n    const [responseText, setResponseText] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch AI response from the server on component mount\r\n        const fetchAiResponse = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/ai_response');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setResponseText(data.response);\r\n            } catch (error) {\r\n                console.error('Error fetching AI response:', error);\r\n                setResponseText('Error: Unable to get a response from the server.');\r\n            }\r\n        };\r\n\r\n        fetchAiResponse();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"ai-tile\">\r\n            <p>{responseText}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AiTile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,eAAe,CAACO,IAAI,CAACL,QAAQ,CAAC;MAClC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDT,eAAe,CAAC,kDAAkD,CAAC;MACvE;IACJ,CAAC;IAEDC,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKe,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBhB,OAAA;MAAAgB,QAAA,EAAIb;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAAClB,EAAA,CA3BQD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AA6Bf,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
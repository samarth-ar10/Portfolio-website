{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\ContentWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContentWindow.css';\nimport eventLogger from './EventLogger';\n\n// Component for handling project tiles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectTile({\n  project,\n  currentSlideIndex,\n  setCurrentSlideIndex\n}) {\n  const handleNextSlide = () => {\n    if (currentSlideIndex < project.slides.length - 1) {\n      setCurrentSlideIndex(currentSlideIndex + 1);\n    }\n  };\n  const handlePreviousSlide = () => {\n    if (currentSlideIndex > 0) {\n      setCurrentSlideIndex(currentSlideIndex - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-tile-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      id: project.id,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"slide-nav-button left\",\n        onClick: e => {\n          e.stopPropagation();\n          handlePreviousSlide();\n        },\n        disabled: currentSlideIndex === 0,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.slides[currentSlideIndex].slideName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-information\",\n          children: project.slides[currentSlideIndex].slideInformation && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.slides[currentSlideIndex].slideInformation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), project.slides[currentSlideIndex].slideDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-description\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.slides[currentSlideIndex].slideDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"slide-nav-button right\",\n        onClick: e => {\n          e.stopPropagation();\n          handleNextSlide();\n        },\n        disabled: currentSlideIndex === project.slides.length - 1,\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = ProjectTile;\nfunction ContentWindow() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentSlideIndices, setCurrentSlideIndices] = useState({});\n  useEffect(() => {\n    // Fetch presentation data from the Flask backend\n    fetch('http://localhost:5000/api/presentations').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched Data:', data); // Log the fetched data to debug JSON structure\n      // Transform the fetched data into the required format for projects\n      const fetchedProjects = Object.entries(data).map(([key, slides]) => {\n        var _slides$;\n        if (!Array.isArray(slides) || slides.length === 0) {\n          console.warn(`Invalid or empty slides for project: ${key}`);\n          return null;\n        }\n        return {\n          id: key,\n          title: ((_slides$ = slides[0]) === null || _slides$ === void 0 ? void 0 : _slides$['Presentation Name']) || 'Untitled Presentation',\n          slides: slides.map(slide => ({\n            slideId: slide['Slide ID'],\n            slideName: slide['Slide Name'],\n            slideType: slide['Slide Type'],\n            slideInformation: slide['Slide Information'],\n            slideDescription: slide['Slide Description']\n          }))\n        };\n      }).filter(project => project !== null);\n      setProjects(fetchedProjects);\n      // Log event for projects retrieval\n      eventLogger.logEvent('projectsRetrieved', 'projectList', fetchedProjects);\n      // Initialize slide indices for each project\n      const initialSlideIndices = fetchedProjects.reduce((acc, project) => {\n        acc[project.id] = 0;\n        return acc;\n      }, {});\n      setCurrentSlideIndices(initialSlideIndices);\n    }).catch(error => {\n      console.error('Error fetching presentations:', error);\n      alert('Error fetching presentations. Please check the console for more details.');\n    });\n  }, []);\n  const setCurrentSlideIndex = (projectId, index) => {\n    setCurrentSlideIndices(prevIndices => ({\n      ...prevIndices,\n      [projectId]: index\n    }));\n    // Log an event whenever the slide index is updated\n    eventLogger.logEvent('slideIndexUpdated', 'slideChange', {\n      projectId,\n      newIndex: index\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ai-presentation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"ai-text\",\n        children: \"Welcome! Click on a project tile to learn more about it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"project-tiles\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectTile, {\n        project: project,\n        currentSlideIndex: currentSlideIndices[project.id] || 0,\n        setCurrentSlideIndex: index => setCurrentSlideIndex(project.id, index)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentWindow, \"TlalK4Rasfe1QOQQ/clSxv6xdcE=\");\n_c2 = ContentWindow;\nexport default ContentWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectTile\");\n$RefreshReg$(_c2, \"ContentWindow\");","map":{"version":3,"names":["React","useState","useEffect","eventLogger","jsxDEV","_jsxDEV","ProjectTile","project","currentSlideIndex","setCurrentSlideIndex","handleNextSlide","slides","length","handlePreviousSlide","className","children","id","onClick","e","stopPropagation","disabled","fileName","_jsxFileName","lineNumber","columnNumber","slideName","slideInformation","slideDescription","_c","ContentWindow","_s","projects","setProjects","currentSlideIndices","setCurrentSlideIndices","fetch","then","response","ok","Error","status","json","data","console","log","fetchedProjects","Object","entries","map","key","_slides$","Array","isArray","warn","title","slide","slideId","slideType","filter","logEvent","initialSlideIndices","reduce","acc","catch","error","alert","projectId","index","prevIndices","newIndex","_c2","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/ContentWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContentWindow.css';\r\nimport eventLogger from './EventLogger';\r\n\r\n// Component for handling project tiles\r\nfunction ProjectTile({ project, currentSlideIndex, setCurrentSlideIndex }) {\r\n    const handleNextSlide = () => {\r\n        if (currentSlideIndex < project.slides.length - 1) {\r\n            setCurrentSlideIndex(currentSlideIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousSlide = () => {\r\n        if (currentSlideIndex > 0) {\r\n            setCurrentSlideIndex(currentSlideIndex - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"project-tile-wrapper\">\r\n            <div className=\"tile\" id={project.id}>\r\n                <button className=\"slide-nav-button left\" onClick={(e) => { e.stopPropagation(); handlePreviousSlide(); }} disabled={currentSlideIndex === 0}>‚Üê</button>\r\n                <div className=\"tile-content\">\r\n                    <h3>{project.slides[currentSlideIndex].slideName}</h3>\r\n                    <div className=\"slide-information\">\r\n                        {project.slides[currentSlideIndex].slideInformation && (\r\n                            <p>{project.slides[currentSlideIndex].slideInformation}</p>\r\n                        )}\r\n                    </div>\r\n                    {project.slides[currentSlideIndex].slideDescription && (\r\n                        <div className=\"slide-description\">\r\n                            <p>{project.slides[currentSlideIndex].slideDescription}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button className=\"slide-nav-button right\" onClick={(e) => { e.stopPropagation(); handleNextSlide(); }} disabled={currentSlideIndex === project.slides.length - 1}>‚Üí</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ContentWindow() {\r\n    const [projects, setProjects] = useState([]);\r\n    const [currentSlideIndices, setCurrentSlideIndices] = useState({});\r\n\r\n    useEffect(() => {\r\n        // Fetch presentation data from the Flask backend\r\n        fetch('http://localhost:5000/api/presentations')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log('Fetched Data:', data); // Log the fetched data to debug JSON structure\r\n                // Transform the fetched data into the required format for projects\r\n                const fetchedProjects = Object.entries(data).map(([key, slides]) => {\r\n                    if (!Array.isArray(slides) || slides.length === 0) {\r\n                        console.warn(`Invalid or empty slides for project: ${key}`);\r\n                        return null;\r\n                    }\r\n                    return {\r\n                        id: key,\r\n                        title: slides[0]?.['Presentation Name'] || 'Untitled Presentation',\r\n                        slides: slides.map(slide => ({\r\n                            slideId: slide['Slide ID'],\r\n                            slideName: slide['Slide Name'],\r\n                            slideType: slide['Slide Type'],\r\n                            slideInformation: slide['Slide Information'],\r\n                            slideDescription: slide['Slide Description'],\r\n                        }))\r\n                    };\r\n                }).filter(project => project !== null);\r\n                setProjects(fetchedProjects);\r\n                // Log event for projects retrieval\r\n                eventLogger.logEvent('projectsRetrieved', 'projectList', fetchedProjects);\r\n                // Initialize slide indices for each project\r\n                const initialSlideIndices = fetchedProjects.reduce((acc, project) => {\r\n                    acc[project.id] = 0;\r\n                    return acc;\r\n                }, {});\r\n                setCurrentSlideIndices(initialSlideIndices);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching presentations:', error);\r\n                alert('Error fetching presentations. Please check the console for more details.');\r\n            });\r\n    }, []);\r\n\r\n    const setCurrentSlideIndex = (projectId, index) => {\r\n        setCurrentSlideIndices(prevIndices => ({\r\n            ...prevIndices,\r\n            [projectId]: index,\r\n        }));\r\n        // Log an event whenever the slide index is updated\r\n        eventLogger.logEvent('slideIndexUpdated', 'slideChange', { projectId, newIndex: index });\r\n    };\r\n\r\n    return (\r\n        <main className=\"content-window\">\r\n            <section className=\"ai-presentation\">\r\n                <p id=\"ai-text\">Welcome! Click on a project tile to learn more about it.</p>\r\n            </section>\r\n            <section className=\"project-tiles\">\r\n                {projects.map((project) => (\r\n                    <ProjectTile\r\n                        key={project.id}\r\n                        project={project}\r\n                        currentSlideIndex={currentSlideIndices[project.id] || 0}\r\n                        setCurrentSlideIndex={(index) => setCurrentSlideIndex(project.id, index)}\r\n                    />\r\n                ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ContentWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\StatusBar.js\",\n  _s = $RefreshSig$();\n// StatusBar.js - Controls the status bar, including chat and menu button functionality\n\nimport React, { useState, useEffect } from 'react';\nimport ChatBar from './ChatBar';\nimport './StatusBar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StatusBar({\n  handleMenuToggle,\n  appName = 'Miruyume'\n}) {\n  _s();\n  const [isChatOpen, setChatOpen] = useState(false);\n  const handleChatToggle = () => {\n    setChatOpen(prev => !prev);\n  };\n  useEffect(() => {\n    const handleChatBarToggle = event => {\n      const {\n        isOpen\n      } = event.detail;\n      const contentWindow = document.querySelector('.content-window');\n      const statusBar = document.querySelector('.status-bar');\n      if (isOpen) {\n        contentWindow.style.marginRight = '400px';\n        statusBar.style.marginRight = '400px';\n      } else {\n        contentWindow.style.marginRight = '0';\n        statusBar.style.marginRight = '0';\n      }\n    };\n    window.addEventListener('chatBarToggle', handleChatBarToggle);\n    return () => {\n      window.removeEventListener('chatBarToggle', handleChatBarToggle);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"status-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: handleMenuToggle,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-name\",\n        children: appName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-button\",\n        onClick: handleChatToggle,\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatBar, {\n      isOpen: isChatOpen,\n      toggleChat: handleChatToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(StatusBar, \"Q/rAaQWGpw0Iu4kcCUVWKtC66Tc=\");\n_c = StatusBar;\nexport default StatusBar;\n\n// Example of how to use handleMenuToggle:\n// const [isMenuOpen, setMenuOpen] = useState(false);\n// const handleMenuToggle = () => setMenuOpen(prev => !prev);\n// Pass handleMenuToggle to <StatusBar handleMenuToggle={handleMenuToggle} />\nvar _c;\n$RefreshReg$(_c, \"StatusBar\");","map":{"version":3,"names":["React","useState","useEffect","ChatBar","jsxDEV","_jsxDEV","Fragment","_Fragment","StatusBar","handleMenuToggle","appName","_s","isChatOpen","setChatOpen","handleChatToggle","prev","handleChatBarToggle","event","isOpen","detail","contentWindow","document","querySelector","statusBar","style","marginRight","window","addEventListener","removeEventListener","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toggleChat","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/StatusBar.js"],"sourcesContent":["// StatusBar.js - Controls the status bar, including chat and menu button functionality\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport ChatBar from './ChatBar';\r\nimport './StatusBar.css';\r\n\r\nfunction StatusBar({ handleMenuToggle, appName = 'Miruyume' }) {\r\n    const [isChatOpen, setChatOpen] = useState(false);\r\n\r\n    const handleChatToggle = () => {\r\n        setChatOpen(prev => !prev);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleChatBarToggle = (event) => {\r\n            const { isOpen } = event.detail;\r\n            const contentWindow = document.querySelector('.content-window');\r\n            const statusBar = document.querySelector('.status-bar');\r\n            if (isOpen) {\r\n                contentWindow.style.marginRight = '400px';\r\n                statusBar.style.marginRight = '400px';\r\n            } else {\r\n                contentWindow.style.marginRight = '0';\r\n                statusBar.style.marginRight = '0';\r\n            }\r\n        };\r\n\r\n        window.addEventListener('chatBarToggle', handleChatBarToggle);\r\n        return () => {\r\n            window.removeEventListener('chatBarToggle', handleChatBarToggle);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"status-bar\">\r\n                <button className=\"menu-button\" onClick={handleMenuToggle}>&#9776;</button>\r\n                <h1 className=\"app-name\">{appName}</h1>\r\n                <button className=\"chat-button\" onClick={handleChatToggle}>&#128172;</button>\r\n            </header>\r\n            <ChatBar isOpen={isChatOpen} toggleChat={handleChatToggle} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StatusBar;\r\n\r\n// Example of how to use handleMenuToggle:\r\n// const [isMenuOpen, setMenuOpen] = useState(false);\r\n// const handleMenuToggle = () => setMenuOpen(prev => !prev);\r\n// Pass handleMenuToggle to <StatusBar handleMenuToggle={handleMenuToggle} />"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,gBAAgB;EAAEC,OAAO,GAAG;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,WAAW,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZ,MAAMc,mBAAmB,GAAIC,KAAK,IAAK;MACnC,MAAM;QAAEC;MAAO,CAAC,GAAGD,KAAK,CAACE,MAAM;MAC/B,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;MAC/D,MAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;MACvD,IAAIJ,MAAM,EAAE;QACRE,aAAa,CAACI,KAAK,CAACC,WAAW,GAAG,OAAO;QACzCF,SAAS,CAACC,KAAK,CAACC,WAAW,GAAG,OAAO;MACzC,CAAC,MAAM;QACHL,aAAa,CAACI,KAAK,CAACC,WAAW,GAAG,GAAG;QACrCF,SAAS,CAACC,KAAK,CAACC,WAAW,GAAG,GAAG;MACrC;IACJ,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,eAAe,EAAEX,mBAAmB,CAAC;IAC7D,OAAO,MAAM;MACTU,MAAM,CAACE,mBAAmB,CAAC,eAAe,EAAEZ,mBAAmB,CAAC;IACpE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA;MAAQyB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBAC1BxB,OAAA;QAAQyB,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEtB,gBAAiB;QAAAoB,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3E9B,OAAA;QAAIyB,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAEnB;MAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvC9B,OAAA;QAAQyB,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEjB,gBAAiB;QAAAe,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACT9B,OAAA,CAACF,OAAO;MAACe,MAAM,EAAEN,UAAW;MAACwB,UAAU,EAAEtB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC/D,CAAC;AAEX;AAACxB,EAAA,CArCQH,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAuClB,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
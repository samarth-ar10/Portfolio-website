{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\ContentWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContentWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentWindow() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    // Fetch presentation data from the Flask backend\n    fetch('http://localhost:5000/api/presentations').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      // Transform the fetched data into the required format for projects\n      const fetchedProjects = Object.entries(data).map(([key, slides]) => {\n        var _slides$;\n        return {\n          id: key,\n          title: ((_slides$ = slides[0]) === null || _slides$ === void 0 ? void 0 : _slides$['Presentation Name']) || 'Untitled Presentation',\n          description: `This presentation contains ${slides.length} slides.`,\n          slides: slides.map(slide => ({\n            slideId: slide['Slide ID'],\n            slideName: slide['Slide Name'],\n            slideType: slide['Slide Type'],\n            slideInformation: slide['Slide Information'],\n            slideDescription: slide['Slide Description']\n          }))\n        };\n      });\n      setProjects(fetchedProjects);\n    }).catch(error => {\n      console.error('Error fetching presentations:', error);\n      alert('Error fetching presentations. Please check the console for more details.');\n    });\n  }, []);\n  const createTile = (id, title, description) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      id: id,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  };\n  const handleTileClick = project => {\n    // Display slides for the selected presentation\n    const aiText = document.getElementById('ai-text');\n    aiText.innerText = `Presentation: ${project.title} - ${project.description}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ai-presentation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"ai-text\",\n        children: \"Welcome! Click on a project tile to learn more about it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"project-tiles\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleTileClick(project),\n        children: createTile(project.id, project.title, project.description)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentWindow, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ContentWindow;\nexport default ContentWindow;\nvar _c;\n$RefreshReg$(_c, \"ContentWindow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContentWindow","_s","projects","setProjects","fetch","then","response","ok","Error","status","json","data","fetchedProjects","Object","entries","map","key","slides","_slides$","id","title","description","length","slide","slideId","slideName","slideType","slideInformation","slideDescription","catch","error","console","alert","createTile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleTileClick","project","aiText","document","getElementById","innerText","onClick","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/ContentWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContentWindow.css';\r\n\r\nfunction ContentWindow() {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch presentation data from the Flask backend\r\n        fetch('http://localhost:5000/api/presentations')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                // Transform the fetched data into the required format for projects\r\n                const fetchedProjects = Object.entries(data).map(([key, slides]) => {\r\n                    return {\r\n                        id: key,\r\n                        title: slides[0]?.['Presentation Name'] || 'Untitled Presentation',\r\n                        description: `This presentation contains ${slides.length} slides.`,\r\n                        slides: slides.map(slide => ({\r\n                            slideId: slide['Slide ID'],\r\n                            slideName: slide['Slide Name'],\r\n                            slideType: slide['Slide Type'],\r\n                            slideInformation: slide['Slide Information'],\r\n                            slideDescription: slide['Slide Description'],\r\n                        }))\r\n                    };\r\n                });\r\n                setProjects(fetchedProjects);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching presentations:', error);\r\n                alert('Error fetching presentations. Please check the console for more details.');\r\n            });\r\n    }, []);\r\n\r\n    const createTile = (id, title, description) => {\r\n        return (\r\n            <div className=\"tile\" id={id} key={id}>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const handleTileClick = (project) => {\r\n        // Display slides for the selected presentation\r\n        const aiText = document.getElementById('ai-text');\r\n        aiText.innerText = `Presentation: ${project.title} - ${project.description}`;\r\n    };\r\n\r\n    return (\r\n        <main className=\"content-window\">\r\n            <section className=\"ai-presentation\">\r\n                <p id=\"ai-text\">Welcome! Click on a project tile to learn more about it.</p>\r\n            </section>\r\n            <section className=\"project-tiles\">\r\n                {projects.map((project) => (\r\n                    <div onClick={() => handleTileClick(project)}>\r\n                        {createTile(project.id, project.title, project.description)}\r\n                    </div>\r\n                ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ContentWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\project\\\\GitHub\\\\samarth_so\\\\Fenrir_Outer_Website\\\\miruyume_react\\\\frontend\\\\miruyume_react\\\\src\\\\components\\\\ContentWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContentWindow.css';\n\n// Component for handling project tiles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectTile({\n  project,\n  currentSlideIndex,\n  handleNextSlide,\n  handlePreviousSlide\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-tile-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      id: project.id,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"slide-nav-button left\",\n        onClick: e => {\n          e.stopPropagation();\n          handlePreviousSlide();\n        },\n        disabled: currentSlideIndex === 0,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.slides[currentSlideIndex].slideName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-information\",\n          children: project.slides[currentSlideIndex].slideInformation && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.slides[currentSlideIndex].slideInformation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), project.slides[currentSlideIndex].slideDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-description\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.slides[currentSlideIndex].slideDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"slide-nav-button right\",\n        onClick: e => {\n          e.stopPropagation();\n          handleNextSlide();\n        },\n        disabled: currentSlideIndex === project.slides.length - 1,\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = ProjectTile;\nfunction ContentWindow() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(0);\n  useEffect(() => {\n    // Fetch presentation data from the Flask backend\n    fetch('http://localhost:5000/api/presentations').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched Data:', data); // Log the fetched data to debug JSON structure\n      // Transform the fetched data into the required format for projects\n      const fetchedProjects = Object.entries(data).map(([key, slides]) => {\n        var _slides$;\n        if (!Array.isArray(slides) || slides.length === 0) {\n          console.warn(`Invalid or empty slides for project: ${key}`);\n          return null;\n        }\n        return {\n          id: key,\n          title: ((_slides$ = slides[0]) === null || _slides$ === void 0 ? void 0 : _slides$['Presentation Name']) || 'Untitled Presentation',\n          slides: slides.map(slide => ({\n            slideId: slide['Slide ID'],\n            slideName: slide['Slide Name'],\n            slideType: slide['Slide Type'],\n            slideInformation: slide['Slide Information'],\n            slideDescription: slide['Slide Description']\n          }))\n        };\n      }).filter(project => project !== null);\n      setProjects(fetchedProjects);\n      if (fetchedProjects.length > 0) {\n        // Set the first project and its first slide by default\n        setCurrentProject(fetchedProjects[0]);\n        setCurrentSlideIndex(0);\n      }\n    }).catch(error => {\n      console.error('Error fetching presentations:', error);\n      alert('Error fetching presentations. Please check the console for more details.');\n    });\n  }, []);\n  const handleNextSlide = () => {\n    if (currentProject && currentSlideIndex < currentProject.slides.length - 1) {\n      setCurrentSlideIndex(currentSlideIndex + 1);\n    }\n  };\n  const handlePreviousSlide = () => {\n    if (currentProject && currentSlideIndex > 0) {\n      setCurrentSlideIndex(currentSlideIndex - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ai-presentation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"ai-text\",\n        children: \"Welcome! Click on a project tile to learn more about it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"project-tiles\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectTile, {\n        project: project,\n        currentSlideIndex: currentSlideIndex,\n        handleNextSlide: handleNextSlide,\n        handlePreviousSlide: handlePreviousSlide\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentWindow, \"s7pP4Hd6JgcHvxb+ZZr+xL/W+cw=\");\n_c2 = ContentWindow;\nexport default ContentWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectTile\");\n$RefreshReg$(_c2, \"ContentWindow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProjectTile","project","currentSlideIndex","handleNextSlide","handlePreviousSlide","className","children","id","onClick","e","stopPropagation","disabled","fileName","_jsxFileName","lineNumber","columnNumber","slides","slideName","slideInformation","slideDescription","length","_c","ContentWindow","_s","projects","setProjects","currentProject","setCurrentProject","setCurrentSlideIndex","fetch","then","response","ok","Error","status","json","data","console","log","fetchedProjects","Object","entries","map","key","_slides$","Array","isArray","warn","title","slide","slideId","slideType","filter","catch","error","alert","_c2","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/project/GitHub/samarth_so/Fenrir_Outer_Website/miruyume_react/frontend/miruyume_react/src/components/ContentWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContentWindow.css';\r\n\r\n// Component for handling project tiles\r\nfunction ProjectTile({ project, currentSlideIndex, handleNextSlide, handlePreviousSlide }) {\r\n    return (\r\n        <div className=\"project-tile-wrapper\">\r\n            <div className=\"tile\" id={project.id}>\r\n                <button className=\"slide-nav-button left\" onClick={(e) => { e.stopPropagation(); handlePreviousSlide(); }} disabled={currentSlideIndex === 0}>←</button>\r\n                <div className=\"tile-content\">\r\n                    <h3>{project.slides[currentSlideIndex].slideName}</h3>\r\n                    <div className=\"slide-information\">\r\n                        {project.slides[currentSlideIndex].slideInformation && (\r\n                            <p>{project.slides[currentSlideIndex].slideInformation}</p>\r\n                        )}\r\n                    </div>\r\n                    {project.slides[currentSlideIndex].slideDescription && (\r\n                        <div className=\"slide-description\">\r\n                            <p>{project.slides[currentSlideIndex].slideDescription}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button className=\"slide-nav-button right\" onClick={(e) => { e.stopPropagation(); handleNextSlide(); }} disabled={currentSlideIndex === project.slides.length - 1}>→</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ContentWindow() {\r\n    const [projects, setProjects] = useState([]);\r\n    const [currentProject, setCurrentProject] = useState(null);\r\n    const [currentSlideIndex, setCurrentSlideIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Fetch presentation data from the Flask backend\r\n        fetch('http://localhost:5000/api/presentations')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log('Fetched Data:', data); // Log the fetched data to debug JSON structure\r\n                // Transform the fetched data into the required format for projects\r\n                const fetchedProjects = Object.entries(data).map(([key, slides]) => {\r\n                    if (!Array.isArray(slides) || slides.length === 0) {\r\n                        console.warn(`Invalid or empty slides for project: ${key}`);\r\n                        return null;\r\n                    }\r\n                    return {\r\n                        id: key,\r\n                        title: slides[0]?.['Presentation Name'] || 'Untitled Presentation',\r\n                        slides: slides.map(slide => ({\r\n                            slideId: slide['Slide ID'],\r\n                            slideName: slide['Slide Name'],\r\n                            slideType: slide['Slide Type'],\r\n                            slideInformation: slide['Slide Information'],\r\n                            slideDescription: slide['Slide Description'],\r\n                        }))\r\n                    };\r\n                }).filter(project => project !== null);\r\n                setProjects(fetchedProjects);\r\n                if (fetchedProjects.length > 0) {\r\n                    // Set the first project and its first slide by default\r\n                    setCurrentProject(fetchedProjects[0]);\r\n                    setCurrentSlideIndex(0);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching presentations:', error);\r\n                alert('Error fetching presentations. Please check the console for more details.');\r\n            });\r\n    }, []);\r\n\r\n    const handleNextSlide = () => {\r\n        if (currentProject && currentSlideIndex < currentProject.slides.length - 1) {\r\n            setCurrentSlideIndex(currentSlideIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousSlide = () => {\r\n        if (currentProject && currentSlideIndex > 0) {\r\n            setCurrentSlideIndex(currentSlideIndex - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"content-window\">\r\n            <section className=\"ai-presentation\">\r\n                <p id=\"ai-text\">Welcome! Click on a project tile to learn more about it.</p>\r\n            </section>\r\n            <section className=\"project-tiles\">\r\n                {projects.map((project) => (\r\n                    <ProjectTile\r\n                        key={project.id}\r\n                        project={project}\r\n                        currentSlideIndex={currentSlideIndex}\r\n                        handleNextSlide={handleNextSlide}\r\n                        handlePreviousSlide={handlePreviousSlide}\r\n                    />\r\n                ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ContentWindow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC,iBAAiB;EAAEC,eAAe;EAAEC;AAAoB,CAAC,EAAE;EACvF,oBACIL,OAAA;IAAKM,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACjCP,OAAA;MAAKM,SAAS,EAAC,MAAM;MAACE,EAAE,EAAEN,OAAO,CAACM,EAAG;MAAAD,QAAA,gBACjCP,OAAA;QAAQM,SAAS,EAAC,uBAAuB;QAACG,OAAO,EAAGC,CAAC,IAAK;UAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;UAAEN,mBAAmB,CAAC,CAAC;QAAE,CAAE;QAACO,QAAQ,EAAET,iBAAiB,KAAK,CAAE;QAAAI,QAAA,EAAC;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxJhB,OAAA;QAAKM,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBP,OAAA;UAAAO,QAAA,EAAKL,OAAO,CAACe,MAAM,CAACd,iBAAiB,CAAC,CAACe;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtDhB,OAAA;UAAKM,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAC7BL,OAAO,CAACe,MAAM,CAACd,iBAAiB,CAAC,CAACgB,gBAAgB,iBAC/CnB,OAAA;YAAAO,QAAA,EAAIL,OAAO,CAACe,MAAM,CAACd,iBAAiB,CAAC,CAACgB;UAAgB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAC7D;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EACLd,OAAO,CAACe,MAAM,CAACd,iBAAiB,CAAC,CAACiB,gBAAgB,iBAC/CpB,OAAA;UAAKM,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAC9BP,OAAA;YAAAO,QAAA,EAAIL,OAAO,CAACe,MAAM,CAACd,iBAAiB,CAAC,CAACiB;UAAgB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNhB,OAAA;QAAQM,SAAS,EAAC,wBAAwB;QAACG,OAAO,EAAGC,CAAC,IAAK;UAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;UAAEP,eAAe,CAAC,CAAC;QAAE,CAAE;QAACQ,QAAQ,EAAET,iBAAiB,KAAKD,OAAO,CAACe,MAAM,CAACI,MAAM,GAAG,CAAE;QAAAd,QAAA,EAAC;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5K;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACM,EAAA,GAtBQrB,WAAW;AAwBpB,SAASsB,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACM,iBAAiB,EAAE0B,oBAAoB,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ;IACAgC,KAAK,CAAC,yCAAyC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;MACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpC;MACA,MAAMG,eAAe,GAAGC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC,CAACM,GAAG,CAAC,CAAC,CAACC,GAAG,EAAE3B,MAAM,CAAC,KAAK;QAAA,IAAA4B,QAAA;QAChE,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC9B,MAAM,CAAC,IAAIA,MAAM,CAACI,MAAM,KAAK,CAAC,EAAE;UAC/CiB,OAAO,CAACU,IAAI,CAAC,wCAAwCJ,GAAG,EAAE,CAAC;UAC3D,OAAO,IAAI;QACf;QACA,OAAO;UACHpC,EAAE,EAAEoC,GAAG;UACPK,KAAK,EAAE,EAAAJ,QAAA,GAAA5B,MAAM,CAAC,CAAC,CAAC,cAAA4B,QAAA,uBAATA,QAAA,CAAY,mBAAmB,CAAC,KAAI,uBAAuB;UAClE5B,MAAM,EAAEA,MAAM,CAAC0B,GAAG,CAACO,KAAK,KAAK;YACzBC,OAAO,EAAED,KAAK,CAAC,UAAU,CAAC;YAC1BhC,SAAS,EAAEgC,KAAK,CAAC,YAAY,CAAC;YAC9BE,SAAS,EAAEF,KAAK,CAAC,YAAY,CAAC;YAC9B/B,gBAAgB,EAAE+B,KAAK,CAAC,mBAAmB,CAAC;YAC5C9B,gBAAgB,EAAE8B,KAAK,CAAC,mBAAmB;UAC/C,CAAC,CAAC;QACN,CAAC;MACL,CAAC,CAAC,CAACG,MAAM,CAACnD,OAAO,IAAIA,OAAO,KAAK,IAAI,CAAC;MACtCwB,WAAW,CAACc,eAAe,CAAC;MAC5B,IAAIA,eAAe,CAACnB,MAAM,GAAG,CAAC,EAAE;QAC5B;QACAO,iBAAiB,CAACY,eAAe,CAAC,CAAC,CAAC,CAAC;QACrCX,oBAAoB,CAAC,CAAC,CAAC;MAC3B;IACJ,CAAC,CAAC,CACDyB,KAAK,CAAEC,KAAK,IAAK;MACdjB,OAAO,CAACiB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDC,KAAK,CAAC,0EAA0E,CAAC;IACrF,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMpD,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIuB,cAAc,IAAIxB,iBAAiB,GAAGwB,cAAc,CAACV,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;MACxEQ,oBAAoB,CAAC1B,iBAAiB,GAAG,CAAC,CAAC;IAC/C;EACJ,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAIsB,cAAc,IAAIxB,iBAAiB,GAAG,CAAC,EAAE;MACzC0B,oBAAoB,CAAC1B,iBAAiB,GAAG,CAAC,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIH,OAAA;IAAMM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC5BP,OAAA;MAASM,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAChCP,OAAA;QAAGQ,EAAE,EAAC,SAAS;QAAAD,QAAA,EAAC;MAAwD;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACVhB,OAAA;MAASM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC7BkB,QAAQ,CAACkB,GAAG,CAAEzC,OAAO,iBAClBF,OAAA,CAACC,WAAW;QAERC,OAAO,EAAEA,OAAQ;QACjBC,iBAAiB,EAAEA,iBAAkB;QACrCC,eAAe,EAAEA,eAAgB;QACjCC,mBAAmB,EAAEA;MAAoB,GAJpCH,OAAO,CAACM,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEf;AAACQ,EAAA,CA7EQD,aAAa;AAAAkC,GAAA,GAAblC,aAAa;AA+EtB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}